version: '3.8'

services:
  frontend:
    image: ghcr.io/magnusquist/sensorsync-frontend:latest
    container_name: sensorsync-frontend
    ports:
      - "8080:8080"
    networks:
      - SensorSync
    depends_on:
      - service-registry
      - gateway-api

  gateway-api:
    image: ghcr.io/magnusquist/sensorsync-gatewayapi:latest
    container_name: sensorsync-gatewayapi
    ports:
      - "8285:8285"
    networks:
      - SensorSync
    depends_on:
      - service-registry
    environment:
      - SERVICE_REGISTRY_URL=http://service-registry:8761

  service-registry:
    image: ghcr.io/magnusquist/sensorsync-serviceregistry:latest
    container_name: sensorsync-serviceregistry
    ports:
      - "8761:8761"
    networks:
      - SensorSync

  db:
    build:
      context: .
      dockerfile: ./database/Dockerfile
    restart: unless-stopped
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: SensorSync
    volumes:
      - db:/var/lib/postgresql/data
      - ./database/init-db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - SensorSync

  message-service:
    image: ghcr.io/helleberg/sensorsync-messageservice:latest
    container_name: sensorsync-messageservice
    restart: on-failure
    ports:
      - "8284:8284"
    networks:
      - SensorSync
    depends_on:
      device-service:
        condition: service_healthy
    environment:
      SERVICE_REGISTRY_URL: http://service-registry:8761
      ATHENA_BROKER_URL: broker
      ATHENA_BROKER_PORT: 1883
      ATHENA_BROKER_USER: admin
      ATHENA_BROKER_PASSWORD: password
    healthcheck:
      test: "curl --fail --silent localhost:8284/actuator/health/readiness | grep UP || exit 1"
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 15s

  device-service:
    image: ghcr.io/magnusquist/sensorsync-deviceservice:latest
    container_name: sensorsync-deviceservice
    restart: on-failure
    ports:
      - "8282:8282"
    networks:
      - SensorSync
    depends_on:
      - db
      - service-registry
    environment:
      SERVICE_REGISTRY_URL: http://service-registry:8761
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/SensorSync
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    healthcheck:
      test: "curl --fail --silent localhost:8282/actuator/health/readiness | grep UP || exit 1"
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 15s

  authentication-service:
    image: ghcr.io/dunkykanstrup/authenticationservice:latest
    container_name: sensorsync-authenticationservice
    restart: on-failure
    ports:
      - "8283:8283"
    networks:
      - SensorSync
    depends_on:
      - db
      - service-registry
    environment:
      SERVICE_REGISTRY_URL: http://service-registry:8761
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/SensorSync
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
  
  firmware-service:
    image: ghcr.io/helleberg/sensorsync-firmwareservice:latest
    container_name: sensorsync-firmwareservice
    restart: on-failure
    ports:
      - "8286:8286"
    networks:
      - SensorSync
    environment:
      SERVICE_REGISTRY_URL: http://service-registry:8761
    depends_on:
      device-service:
        condition: service_healthy
      message-service:
        condition: service_healthy

  broker:
    build:
      context: .
      dockerfile: ./broker/Dockerfile
    container_name: sensorsync-broker
    networks:
      SensorSync:
        ipv4_address: 172.100.10.10
    ports:
      - "1883:1883" #default mqtt port
      - "9001:9001" #default mqtt port for websockets
    volumes:
      - ./broker/config:/mosquitto/config
      - ./broker/log:/mosquitto/log
      - broker_data:/mosquitto/data
    restart: unless-stopped


networks:
  SensorSync:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.100.10.0/24

volumes:
  db:
  broker_data:
